-- Create database and schema
CREATE DATABASE adaptive_llm_db;
CREATE SCHEMA ai_router;

-- Candidate arms (Claude, Llama, DeepSeek)
CREATE OR REPLACE TABLE ARMS (
  MODEL_ID STRING PRIMARY KEY,           -- e.g. SNOWFLAKE.MODELS."LLAMA3.1-70B"
  IS_ACTIVE BOOLEAN DEFAULT TRUE,
  CREDITS_PER_MTOK NUMBER(10,3),         -- credits per 1,000,000 tokens
  NOTE STRING
);


-- (Re)seed with short names + credits per 1M tokens
INSERT OVERWRITE INTO ARMS (MODEL_ID, CREDITS_PER_MTOK, NOTE) VALUES
('claude-3-7-sonnet', 2.55, 'Claude family'),
('llama3.1-70b',      1.21, 'Llama family'),
('llama3.1-8b',       0.19, 'Llama small'),
('mistral-7b',        0.12, 'Mistral Model')
;

-- Per-arm running stats (EWMA + cached score)
CREATE OR REPLACE TABLE ARM_STATS (
  MODEL_ID STRING PRIMARY KEY,
  PULLS NUMBER DEFAULT 0,
  EWMA_PERF NUMBER(10,4) DEFAULT 0.60,         -- 0..1 (higher better)
  EWMA_COST NUMBER(10,4) DEFAULT 0.30,         -- 0..1 (lower better)
  SCORE NUMBER(10,4) DEFAULT 0.50,             -- perf_w*EWMA_PERF - (1-perf_w)*EWMA_COST
  LAST_UPDATE TIMESTAMP_NTZ
);

-- Cached winner for zero-latency exploitation
CREATE OR REPLACE TABLE CURRENT_BEST (
  MODEL_ID STRING,
  SCORE NUMBER(10,4),
  UPDATED_AT TIMESTAMP_NTZ
);

-- Per-call event log
CREATE OR REPLACE TABLE EVENTS (
  EVENT_ID STRING,
  TS TIMESTAMP_NTZ,
  PROMPT_HASH STRING,
  PROMPT STRING,
  CHOSEN_MODEL STRING,
  RESPONSE STRING,
  LATENCY_MS NUMBER,
  IS_EXPLORATION BOOLEAN,
  REWARD NUMBER(10,4),
  REWARD_READY BOOLEAN DEFAULT FALSE
);

-- Judging queue (off-path work items)
CREATE OR REPLACE TABLE JUDGING_QUEUE (
  EVENT_ID STRING PRIMARY KEY,
  ENQUEUED_AT TIMESTAMP_NTZ,
  STATUS STRING DEFAULT 'NEW',      -- NEW | PROCESSING | DONE | ERROR
  LAST_ERROR STRING
);

-- Global config (setup-time knobs)
CREATE OR REPLACE TABLE CONFIG (
  KEY STRING PRIMARY KEY,
  VALUE STRING
);

INSERT OVERWRITE INTO CONFIG(KEY, VALUE) VALUES
('perf_weight','0.80'),      -- ONLY weight you set
('epsilon','0.15'),          -- exploration probability (tune as you like)
('ewma_alpha','0.20');       -- EWMA learning rate


--- Initialize stats and cache winner ------

MERGE INTO ARM_STATS t
USING (SELECT MODEL_ID FROM ARMS WHERE IS_ACTIVE) s
ON t.MODEL_ID = s.MODEL_ID
WHEN NOT MATCHED THEN
  INSERT (MODEL_ID, PULLS, EWMA_PERF, EWMA_COST, SCORE, LAST_UPDATE)
  VALUES (
    s.MODEL_ID, 0, 0.60, 0.30,
    TO_DOUBLE((SELECT VALUE FROM CONFIG WHERE KEY='perf_weight')) * 0.60
    - (1-TO_DOUBLE((SELECT VALUE FROM CONFIG WHERE KEY='perf_weight'))) * 0.30,
    CURRENT_TIMESTAMP()
  );

INSERT OVERWRITE INTO CURRENT_BEST
SELECT MODEL_ID, SCORE, CURRENT_TIMESTAMP()
FROM ARM_STATS
WHERE MODEL_ID IN (SELECT MODEL_ID FROM ARMS WHERE IS_ACTIVE)
ORDER BY SCORE DESC
LIMIT 1;


CREATE OR REPLACE TABLE JUDGE_OUTPUTS (
  EVENT_ID STRING,
  JUDGE_MODEL STRING,
  RAW_OUTPUT STRING,
  PARSED_SCORE NUMBER(10,4),
  CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP()
);

-----------


-- Inspect
SELECT * FROM EVENTS ORDER BY TS DESC;
SELECT * FROM ARM_STATS ORDER BY SCORE DESC;
SELECT * FROM CURRENT_BEST;

SELECT EVENT_ID, JUDGE_MODEL, PARSED_SCORE, RAW_OUTPUT 
FROM JUDGE_OUTPUTS 
ORDER BY EVENT_ID;


SELECT * FROM JUDGE_OUTPUTS ORDER BY CREATED_AT DESC;
